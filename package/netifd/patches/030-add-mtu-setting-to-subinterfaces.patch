--- a/system-linux.c
+++ b/system-linux.c
@@ -288,7 +288,23 @@ int system_bonding_delbonding(struct dev
 
 	return 0;
 }
+static int system_set_mtu(struct device * dev, int mtu,void * data)
+{
+	struct ifreq ifr;
+
+	if(!dev) return 0;
+	struct device * parent = system_if_get_parent(dev);
 
+	memset(&ifr, 0, sizeof(ifr));
+
+	ifr.ifr_addr.sa_family = AF_INET;
+	if (parent)
+		system_set_mtu(parent, mtu, data);
+
+	strncpy(ifr.ifr_name, dev->ifname, sizeof(ifr.ifr_name));
+	ifr.ifr_mtu = mtu;
+	return ioctl(sock_ioctl, SIOCSIFMTU, &ifr);
+}
 static int system_bridge_if(const char *bridge, struct device *dev, int cmd, void *data)
 {
 	struct ifreq ifr;
@@ -382,6 +398,11 @@ int system_bridge_addif(struct device *b
 	char *oldbr;
 
 	system_set_disable_ipv6(dev, "1");
+
+	if (bridge->settings.flags & DEV_OPT_MTU){
+		system_set_mtu(dev,bridge->settings.mtu,NULL);
+	}
+
 	oldbr = system_get_bridge(dev->ifname, dev_buf, sizeof(dev_buf));
 	if (oldbr && !strcmp(oldbr, bridge->ifname))
 		return 0;
@@ -392,6 +413,9 @@ int system_bridge_addif(struct device *b
 int system_bridge_delif(struct device *bridge, struct device *dev)
 {
 	system_set_disable_ipv6(dev, "0");
+	if (bridge->settings.flags & DEV_OPT_MTU){
+		system_set_mtu(dev,1500,NULL);
+	}
 	return system_bridge_if(bridge->ifname, dev, SIOCBRDELIF, NULL);
 }
 
@@ -779,7 +803,7 @@ system_if_apply_settings(struct device *
 	strncpy(ifr.ifr_name, dev->ifname, sizeof(ifr.ifr_name));
 	if (s->flags & DEV_OPT_MTU) {
 		ifr.ifr_mtu = s->mtu;
-		if (ioctl(sock_ioctl, SIOCSIFMTU, &ifr) < 0)
+		if (system_set_mtu(dev, s->mtu, NULL) < 0)
 			s->flags &= ~DEV_OPT_MTU;
 	}
 	if (s->flags & DEV_OPT_TXQUEUELEN) {
